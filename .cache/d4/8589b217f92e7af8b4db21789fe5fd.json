{"id":"ejercicios/call-apply-bind.html","dependencies":[{"name":"E:\\Programas\\Programacion\\Profesional-de-Javascript\\package.json","includedInParent":true,"mtime":1620631791561}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Call-apply-bind</title>\r\n</head>\r\n<body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n    <p><em>Abre la consola</em></p>\r\n\r\n    <ul>\r\n        <li><button class=\"call-to-action\">Aprender</button></li>\r\n        <li><button class=\"call-to-action\">Aprender Más</button></li>\r\n        <li><button class=\"call-to-action\">!Nunca parar de Aprender</button></li>\r\n    </ul>\r\n\r\n    <script>// Establece `this` usando `call`\nfunction saludar() {\n  console.log(`Hola. Soy ${this.name} ${this.apellido}`);\n}\n\nconst richard = {\n  name: \"Richard\",\n  apellido: \"Kaufman Lopez\"\n};\nsaludar.call(richard); // Establece `this` usando `call` y pasar argumentos a la función\n\nfunction caminar(metros, direccion) {\n  console.log(`${this.name} camina ${metros} metros hacia ${direccion}.`);\n}\n\ncaminar.call(richard, 400, \"norte\"); // Establece `this` usando `apply` y pasar argumentos a la función\n\nconst valores = [800, 'noreste'];\ncaminar.apply(richard, valores); //caminar.apply(richard, [800, 'noreste']);\n\n/*\r\n Call - comma\r\n Apply - arreglo\r\n*/\n//Establecer `this` en una nueva función usando `bind`\n\nconst daniel = {\n  name: \"Daniel\",\n  apellido: \"Sánchez\"\n};\nconst danielSaluda = saludar.bind(daniel);\ndanielSaluda();\nconst danielCamina = caminar.bind(daniel, 2000, 'sur'); //danielCamina(1000, 'este');\n\ndanielCamina(); //Otra forma\n// const danielCamina = caminar.bind(daniel, 2000);\n// danielCamina('oeste');\n// Cuando es útil usar uno de estos métodos\n\nconst buttons = document.getElementsByClassName(\"call-to-action\"); // buttons.forEach(button => {\n//     button.onclick = () => alert(\"Nunca pares de de aprender\");\n// });\n//NodeList\n\nArray.prototype.forEach.call(buttons, button => {\n  button.onclick = () => alert('Nunca pares de aprender');\n});</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"70105c68d6a8b9a54a7dd0c954f70445","cacheData":{"env":{}}}